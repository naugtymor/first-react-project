{"version":3,"file":"static/js/687.2b42dde5.chunk.js","mappings":"wLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA2G,0BCA3G,EAAyB,wB,SCUzB,EARgB,SAACA,GACb,OACI,gBAAKC,UAAWC,EAAS,SACpBF,EAAMG,SAGnB,ECRA,EAAyB,2B,UCczB,EAXmB,SAACH,GAChB,OACI,gBAAKC,UAAWC,EAAS,UACrB,UAAC,KAAO,CAACE,GAAE,mBAAcJ,EAAMK,IAAK,WAChC,gBAAKC,IAAG,UAAKN,EAAMO,OACdP,EAAMQ,SAI3B,E,qCCRMC,GAAWC,EAAAA,EAAAA,GAAQ,YACnBC,GAAcC,EAAAA,EAAAA,GAAiB,IAerC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAhC,EAbuB,SAACd,GACpB,OACI,kBAAMe,SAAUf,EAAMgB,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWT,EAAUD,KAAM,iBAAkBW,YAAa,qBAAsBC,SAAU,CAACC,EAAAA,EAAUV,QAEhH,0BACI,6BAAQ,+CAIxB,ICcA,EA3BgB,SAACX,GACb,IAAIsB,EAAQtB,EAAMuB,YAEdC,EAAkBF,EAAMG,QACvBC,KAAI,SAACC,GAAC,OAAK,SAAC,EAAU,CAACnB,KAAMmB,EAAEnB,KAAMH,GAAIsB,EAAEtB,GAAIE,IAAKoB,EAAEpB,KAAUoB,EAAEtB,GAAK,IACxEuB,EAAmBN,EAAMO,SACxBH,KAAI,SAACI,GAAC,OAAK,SAAC,EAAO,CAAC3B,QAAS2B,EAAE3B,SAAc2B,EAAEzB,GAAK,IAMzD,OACI,iBAAKJ,UAAWC,EAAU,WACtB,gBAAKD,UAAWC,EAAe,SAC1BsB,KAEL,iBAAKvB,UAAWC,EAAW,WACvB,yBACK0B,KAEL,SAAC,EAAc,CAACb,SAbR,SAACgB,GACjB/B,EAAMgC,YAAYD,EAAOE,eAC7B,SAeJ,E,oBCVA,GAAeC,E,QAAAA,KAAQC,EAAAA,EAAAA,KAdD,SAACb,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACa,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,GAAyBJ,GACtC,EAER,IAEqEK,EAAAA,EAArE,CAAuFC,E,kJCjBnFC,EAA6B,SAAClB,GAAK,MAAM,CACzCmB,OAAQnB,EAAMoB,KAAKD,OACtB,EAEYH,EAAmB,SAACK,GAAe,IACtCC,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAKC,KAAK7C,MAAMyC,QACT,SAACE,GAAS,UAAKE,KAAK7C,SADI,SAAC,KAAQ,CAACI,GAAI,UAEjD,KAAC,EAJkB,CAAS0C,EAAAA,WAShC,OAFqCX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS,EAG7E,C","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-kabzda-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://react-kabzda-1/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__L6oHO\",\"dialogsItems\":\"Dialogs_dialogsItems__aki-y\",\"messages\":\"Dialogs_messages__RCblM\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Message_dialog__EQKvN\"};","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__qzZZ2\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={`/dialogs/${props.id}`}>\r\n                <img src={`${props.img}`}/>\r\n                    {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\n\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'} placeholder={'Enter your message'} validate={[required, maxLength30]}/>\r\n            </div>\r\n            <div>\r\n                <button><h3>Send message</h3></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'DialogAddMessageForm'})(AddMessageForm);\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map((d) => <DialogItem name={d.name} id={d.id} img={d.img} key={d.id}/>)\r\n    let messagesElements = state.messages\r\n        .map((m) => <Message message={m.message} key={m.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","className","s","message","to","id","src","img","name","Textarea","Element","maxLength30","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}