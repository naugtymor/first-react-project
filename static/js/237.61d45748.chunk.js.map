{"version":3,"file":"static/js/237.61d45748.chunk.js","mappings":"gOACA,EAAmC,sC,4BC0CnC,EAvC+B,SAACA,GAC5B,OAA8BC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC1B,GAA0BF,EAAAA,EAAAA,UAASD,EAAMI,QAAO,eAA3CA,EAAM,KAAEC,EAAS,MAEtBC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,OACpB,GAAG,CAACJ,EAAMI,SAeV,OACI,4BACMF,IACE,sCAEI,iBAAMK,cAlBG,WACrBJ,GAAY,EAChB,EAgBsD,SAAEC,OAG/CF,IACG,sCAEI,kBAAOM,WAAS,EAACC,OApBN,WACvBN,GAAY,GACZH,EAAMU,aAAaN,EACvB,EAiB6DO,SAftC,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,MAC9B,EAauFA,MAAOV,SAKlG,ECnBA,EAjBoB,SAACJ,GACjB,OAAKA,EAAMe,SAKP,0BACI,iBAAKC,UAAWC,EAAmB,WAC/B,gBAAKC,IAAKlB,EAAMe,QAAQI,OAAOC,SAC/B,wBAAKpB,EAAMe,QAAQM,YACnB,SAAC,EAAsB,CAACjB,OAAQJ,EAAMI,OAAQM,aAAcV,EAAMU,gBAClE,mDAA2BV,EAAMe,QAAQO,mCAT1C,SAACC,EAAA,EAAS,GAazB,E,UCnBA,EAA6B,4BAA7B,EAAiE,uBCAjE,EAAuB,mBCcvB,EAZa,SAACvB,GACV,OACI,iBAAKgB,UAAWC,EAAO,WACnB,gBAAKC,IAAK,8CAA+CM,IAAK,yBAC7DxB,EAAMyB,SACP,0BACI,qCAAazB,EAAM0B,kBAInC,E,2BCRMC,GAAWC,E,QAAAA,GAAQ,YACnBC,GAAcC,EAAAA,EAAAA,GAAiB,IAiBrC,GAF4BC,EAAAA,EAAAA,GAAU,CAACC,KAAM,sBAAjBD,EAbR,SAAC/B,GACjB,OACI,kBAAMiC,SAAUjC,EAAMkC,aAAa,WAC/B,0BACI,SAACC,EAAA,EAAK,CAACC,UAAWT,EAAUU,KAAM,cAAeC,YAAa,kBAAmBC,SAAU,CAACC,EAAAA,EAAUX,QAE1G,0BACI,6BAAQ,2CAIxB,ICMA,EApBgBY,EAAAA,MAAW,SAACzC,GAExB,IAAI0C,EAAgB1C,EAAM0C,cACrBC,KAAI,SAACC,GAAC,OAAK,SAAC,EAAI,CAACnB,QAASmB,EAAEnB,QAASC,WAAYkB,EAAElB,YAAiBkB,EAAEC,GAAK,IAMhF,OACI,iBAAK7B,UAAWC,EAAa,WACzB,mCACA,SAAC,EAAmB,CAACgB,SAPZ,SAACa,GACd9C,EAAM+C,QAAQD,EAAOE,YACzB,KAMQ,gBAAKhC,UAAWC,EAAQ,SACnByB,MAIjB,I,UCFA,GAFyBO,EAAAA,EAAAA,KAdH,SAACC,GACnB,MAAO,CACHF,YAAaE,EAAMC,YAAYH,YAC/BN,cAAeQ,EAAMC,YAAYC,MAEzC,IACyB,SAACC,GACtB,MAAO,CACHN,QAAS,SAACC,GACNK,GAASC,EAAAA,EAAAA,IAAqBN,GAClC,EAER,GAEyBC,CAA6CM,GCJtE,EAVgB,SAACvD,GAEb,OACI,4BACI,SAAC,EAAW,CAACe,QAASf,EAAMe,QAASX,OAAQJ,EAAMI,OAAQM,aAAcV,EAAMU,gBAC/E,SAAC,EAAgB,MAG7B,E,8BCJM8C,EAAgB,qGAejB,OAfiB,yCAElB,WACI,IAAIC,EAAUC,KAAK1D,MAAM2D,OAAOC,OAAOH,OAClCA,IACDA,EAASC,KAAK1D,MAAM6D,kBAExBH,KAAK1D,MAAM8D,eAAeL,GAC1BC,KAAK1D,MAAM+D,UAAUN,EACzB,GAAC,oBAED,WACI,OACI,SAAC,GAAO,kBAAKC,KAAK1D,OAAK,IAAEe,QAAS2C,KAAK1D,MAAMe,QAASX,OAAQsD,KAAK1D,MAAMI,OAAQM,aAAcgD,KAAK1D,MAAMU,eAElH,KAAC,EAfiB,CAAS+B,EAAAA,WAwC/B,OAAeuB,EAAAA,EAAAA,KACXf,EAAAA,EAAAA,KAvBkB,SAACC,GAAK,MAAM,CAC9BnC,QAASmC,EAAMC,YAAYpC,QAC3BX,OAAQ8C,EAAMC,YAAY/C,OAC1ByD,iBAAkBX,EAAMe,KAAKR,OAC7BS,OAAQhB,EAAMe,KAAKC,OACtB,GAkB4B,CAACJ,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAWrD,aAAAA,EAAAA,MAhBzD,SAAoByD,GAYhB,OAXA,SAAiCnE,GAC7B,IAAIoE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXX,GAASY,EAAAA,EAAAA,MACb,OACI,SAACL,GAAS,kBACFnE,GAAK,IACT2D,OAAQ,CAACS,SAAAA,EAAUE,SAAAA,EAAUV,OAAAA,KAGzC,CAEJ,GAKIa,EAAAA,EAHJ,CAIEjB,E,kJCjDEkB,EAA6B,SAACxB,GAAK,MAAM,CACzCgB,OAAQhB,EAAMe,KAAKC,OACtB,EAEYO,EAAmB,SAACN,GAAe,IACtCQ,EAAiB,qGAIlB,OAJkB,8BACnB,WACI,OAAKjB,KAAK1D,MAAMkE,QACT,SAACC,GAAS,UAAKT,KAAK1D,SADI,SAAC,KAAQ,CAAC4E,GAAI,UAEjD,KAAC,EAJkB,CAASnC,EAAAA,WAShC,OAFqCQ,EAAAA,EAAAA,IAAQyB,EAARzB,CAAoC0B,EAG7E,C","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/AddMessageReduxForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__EAsJU\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    Status:\r\n                    <span onDoubleClick={activateEditMode}>{status}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    Status:\r\n                    <input autoFocus onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <h2>{props.profile.fullName}</h2>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <div>Searching for a job: {props.profile.lookingForAJobDescription}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__doGyn\",\"posts\":\"MyPosts_posts__W81Ez\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__keswp\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={'https://wallpapercave.com/uwp/uwp753612.png'} alt={'description of image'}/>\r\n            {props.message}\r\n            <div>\r\n                <span>likes {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validator\";\r\nimport React from \"react\";\r\nimport {Element} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Enter your text'} validate={[required, maxLength30]}/>\r\n            </div>\r\n            <div>\r\n                <button><h3>Add post</h3></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'ProfileAddPostForm'})(AddPostForm);\r\n\r\nexport default AddMessageReduxForm;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport AddMessageReduxForm from \"./Post/AddMessageReduxForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.postsElements\r\n        .map((p) => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>Posts</h2>\r\n            <AddMessageReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postsElements: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n    componentDidMount() {\r\n        let userId  = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","className","s","src","photos","large","fullName","lookingForAJobDescription","Preloader","alt","message","likesCount","Textarea","Element","maxLength30","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","name","placeholder","validate","required","React","postsElements","map","p","id","values","addPost","newPostText","connect","state","profilePage","posts","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}