{"version":3,"file":"static/js/962.353b95e5.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Post/AddMessageReduxForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__EAsJU\",\"contact\":\"ProfileInfo_contact__GjXOQ\",\"formSummeryError\":\"ProfileInfo_formSummeryError__sfdVe\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    Status:\r\n                    <span onDoubleClick={activateEditMode}>{status}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    Status:\r\n                    <input autoFocus onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validator\";\r\nimport {Element} from \"../../common/FormsControls/FormsControls\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nexport const Input = Element(\"input\")\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>save</button>\r\n                {error && <div>\r\n                <span className={s.formSummeryError}>\r\n                    {error}\r\n                </span>\r\n                </div>\r\n                }\r\n            </div>\r\n            <h2> Full name:\r\n                <Field component={Input} name={'fullName'} placeholder={'Full Name'} validate={[]}/>\r\n            </h2>\r\n            <div>Searching for a job:\r\n                <Field component={Input} name={'lookingForAJob'} validate={[]} type={\"checkbox\"}/>\r\n            </div>\r\n            <div>About me:\r\n                <Field component={Input} name={'aboutMe'} placeholder={'About Me'} validate={[]}/>\r\n            </div>\r\n            <div>\r\n                My professional skills:\r\n                <Field component={Textarea} name={'lookingForAJobDescription'} placeholder={'Enter your skills'} validate={[required, maxLength30]}/>\r\n            </div>\r\n            <div>Contacts {Object.keys(profile.contacts).map((key,index) => {\r\n                return (\r\n                    <div className={s.contact} key={index}>\r\n                        <div>\r\n                            {key}:\r\n                            <Field component={Input} name={'contacts.' + key} validate={[]} placeholder={key}/>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}</div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport {ProfileDataReduxForm} from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                {editMode ? <ProfileDataReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> :\r\n                    <ProfileData profile={profile}\r\n                                 isOwner={isOwner}\r\n                                 activateEditMode={() => {\r\n                                     setEditMode(true)\r\n                                 }}/>}\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            {contactTitle}:{contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>{props.profile.fullName}</h2>\r\n            <div>\r\n                {props.isOwner ? <button onClick={props.activateEditMode}>edit</button> : ''}\r\n            </div>\r\n            <div>Searching for a job: {props.profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n            <div>About me: {props.profile.aboutMe}</div>\r\n            <div>My professional skills: {props.profile.lookingForAJobDescription}</div>\r\n            <div>Contacts {Object.keys(props.profile.contacts).map((key,index) => {\r\n                return <Contact key={index} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n            })}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__doGyn\",\"posts\":\"MyPosts_posts__W81Ez\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__keswp\"};","import React from \"react\";\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={'https://wallpapercave.com/uwp/uwp753612.png'} alt={'description of image'}/>\r\n            {props.message}\r\n            <div>\r\n                <span>likes {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validator\";\r\nimport React from \"react\";\r\nimport {Element} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst Textarea = Element(\"textarea\")\r\nconst maxLength30 = maxLengthCreator(30)\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Enter your text'} validate={[required, maxLength30]}/>\r\n            </div>\r\n            <div>\r\n                <button><h3>Add post</h3></button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'ProfileAddPostForm'})(AddPostForm);\r\n\r\nexport default AddMessageReduxForm;","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport AddMessageReduxForm from \"./Post/AddMessageReduxForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.postsElements\r\n        .map((p) => <Post message={p.message} likesCount={p.likesCount} key={p.id}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>Posts</h2>\r\n            <AddMessageReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        postsElements: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}\r\n                         isOwner={props.isOwner} savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport s from './Profile.module.css';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} isOwner={!this.props.router.params.userId} profile={this.props.profile}\r\n                     status={this.props.status} updateStatus={this.props.updateStatus} savePhoto={this.props.savePhoto} saveProfile={this.props.saveProfile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{location, navigate, params}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import {Navigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","Input","Element","Textarea","maxLength30","maxLengthCreator","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","s","Field","component","name","placeholder","validate","type","required","Object","keys","contacts","map","key","index","Contact","contactTitle","contactValue","ProfileData","fullName","isOwner","onClick","activateEditMode","lookingForAJob","aboutMe","lookingForAJobDescription","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","alt","message","likesCount","React","postsElements","p","id","values","addPost","newPostText","connect","state","profilePage","posts","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","compose","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","RedirectComponent","to"],"sourceRoot":""}